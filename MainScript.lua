-- if game.placeId != 0 then return end
repeat wait() until game:IsLoaded() and game.Players.LocalPlayer ~= nil and game.Players.LocalPlayer.Character ~= nil

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ThreadLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/ThatMG393/AFS-RBLX-Exploit/main/ThreadLib.lua")))()

local ChakraTrainThread = ThreadLib.New(function (thread)
	while thread.active do
		ReplicatedStorage.RSPackage.Events.StatFunction:InvokeServer('Stat', 'Chakra')
		ReplicatedStorage.RSPackage.Events.StatFunction:InvokeServer('Stat', 'Chakra')
		ReplicatedStorage.RSPackage.Events.StatFunction:InvokeServer('Stat', 'Chakra')
	end
end)

local DurabilityTrainThread = ThreadLib.New(function (thread)
	while thread.active do
		ReplicatedStorage.RSPackage.Events.StatFunction:InvokeServer('Stat', 'Durability')
		ReplicatedStorage.RSPackage.Events.StatFunction:InvokeServer('Stat', 'Durability')
		ReplicatedStorage.RSPackage.Events.StatFunction:InvokeServer('Stat', 'Durability')
	end
end)

local StrengthTrainThread = ThreadLib.New(function (thread)
	while thread.active do
		ReplicatedStorage.RSPackage.Events.StatFunction:InvokeServer('Stat', 'Strength')
		ReplicatedStorage.RSPackage.Events.StatFunction:InvokeServer('Stat', 'Strength')
		ReplicatedStorage.RSPackage.Events.StatFunction:InvokeServer('Stat', 'Strength')
	end
end)

local AutoYenThread = ThreadLib.New(function (thread)
	local plr = game.Players.LocalPlayer
	local dung = { 7220975160,7220986579 }
	
	if not table.find(dung, game.PlaceId) then
		game:GetService("TeleportService"):Teleport(dung[ math.random(1, #dung) ])
		return
	end
	
	repeat wait() until plr.PlayerGui ~= nil and plr.PlayerGui.Main ~= nil and plr.PlayerGui.Main.Notifs ~= nil
	game.Players.LocalPlayer.PlayerGui.Main.Notifs:Destroy()
	repeat wait() until workspace.MouseIgnore ~= nil
	workspace.MouseIgnore:Destroy()
	
	while thread.active do
		ReplicatedStorage.RSPackage.Events.GeneralFunction:InvokeServer("LotteryRandomDraw")
		ReplicatedStorage.RSPackage.Events.GeneralEvent:FireServer("SpinFinished")
	end
end)

if not UIS.TouchEnabled and UIS.KeyboardEnabled and UIS.MouseEnabled and UIS.GamepadEnabled and GuiService:IsTenFootInterface() then
	-- getgenv().SecureMode = true -- Remove the -- from the start of this line if its crashing
	local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

	local function showNotif(title, content, actions)
		if actions == nil then
			Rayfield:Notify({
				Title = title,
				Content = content,
				Duration = 3,
				Actions = {
					Ignore = {
						Name = "Okay!"
				   }
				}
			})
			return
		end
	
		Rayfield:Notify({
			Title = title,
			Content = content,
			Duration = 6,
			Actions = actions
		})
	end

	showNotif("UI made by ThatMG393", "I don't know where some of my friends got some of the scripts.", nil)

	local Window = Rayfield:CreateWindow({
		Name = "Rayfield Example Window",
		LoadingTitle = "Rayfield Interface Suite",
		LoadingSubtitle = "by Sirius",
		ConfigurationSaving = {
			Enabled = true,
			FolderName = 'MGHub',
			FileName = 'MGHub'
		}
	})

	local MainTab = Window:CreateTab("Main", 0)

	local AutoStatSection = MainTab:CreateSection("Auto Stats")
	local AutoChakraToggle = MainTab:CreateToggle({
		Name = "AutoChakra",
		CurrentValue = false,
		Flag = "AutoChakraPref",
		Callback = function(Value)
			if Value then
				ChakraTrainThread.Start()
				showNotif("AutoChakra train started!", "", nil)
			else
				ChakraTrainThread:Stop()
				showNotif("AutoChakra train stopped!", "", nil)
			end
		end
	})

	local AutoDurabilityToggle = MainTab:CreateToggle({
		Name = "AutoDurability",
		CurrentValue = false,
		Flag = "AutoChakraPrefPref",
		Callback = function(Value)
			if Value then
				DurabilityTrainThread.Start()
				showNotif("AutoDurability train started!", "", nil)
			else
				DurabilityTrainThread:Stop()
				showNotif("AutoDurability train stopped!", "", nil)
			end
		end
	})

	local AutoStrengthToggle = MainTab:CreateToggle({
		Name = "AutoStrength",
		CurrentValue = false,
		Flag = "AutoStrengthPref",
		Callback = function(Value)
			if Value then
				StrengthTrainThread.Start()
				showNotif("AutoStrength train started!", "", nil)
			else
				StrengthTrainThread:Stop()
				showNotif("AutoStrength train stopped!", "", nil)
			end
		end
	})

	local AutoYenSection = MainTab:CreateSection("Auto Trains")
	local AutoYenToggle = MainTab:CreateToggle({
		Name = "AutoYen",
		CurrentValue = false,
		Flag = "AutoYenPref",
		Callback = function(Value)
			if Value then
				AutoYenThread.Start()
				showNotif("AutoYen started!", "HERE COMES THE MONEY!", nil)
			else
				AutoYenThread:Stop()
				showNotif("AutoYen stopped!", "", nil)
			end
		end
	})

	local UITab = Window:CreateTab("UI", 0)
	local Button = UITab:CreateButton({
		Name = "Destroy UI",
		Callback = function()
			showNotif("Are you sure?", "", {
				Ignore = {
					Name = "Yes!",
					Callback = function ()
						Rayfield:Destroy()
					end
				}
			})
		end
	})
else -------------------------Mobile---------------------------
	local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
	OrionLib:MakeNotification({
		Name = "UI Made by ThatMG393",
		Content = "Buggy, first time implementing UI on an exploit",
		Time = 7
	})
	local Window = OrionLib:MakeWindow({Name = "AFS TrainScript | ThatMG393 v0.0.4", HidePremium = true, SaveConfig = true, ConfigFolder = "AFSTrainScriptSaves", IntroEnabled = true})

	local MainTab = Window:MakeTab({
		Name = "Main",
		PremiumOnly = false
	})

	local MainSection = MainTab:AddSection({ Name = "AutoTraining" })
	MainSection:AddToggle({
		Name = "Activate Chakra Train",
		Default = false,
		Callback = function(Value)
		if Value then
				ChakraTrainThread:Start()
				OrionLib:MakeNotification({
					Name = "Started Chakra Training",
					Time = 7
				})
			else
				ChakraTrainThread:Stop()
				OrionLib:MakeNotification({
					Name = "Stopped Chakra Training",
					Time = 7
				})
			end
		end    
	})

	MainSection:AddToggle({
		Name = "Activate Durability Train",
		Default = false,
		Callback = function(Value)
			if Value then
				DurabilityTrainThread:Start()
				OrionLib:MakeNotification({
					Name = "Started Durability Training",
					Time = 7
				})
			else
				DurabilityTrainThread:Stop()
				OrionLib:MakeNotification({
					Name = "Stopped Durability Training",
					Time = 7
				})
			end
		end    
	})

	MainSection:AddToggle({
		Name = "Activate Strength Train",
		Default = false,
		Callback = function(Value)
			if Value then
				StrengthTrainThread:Start()
				OrionLib:MakeNotification({
					Name = "Started Strength Training",
					Time = 7
				})
			else
				StrengthTrainThread:Stop()
				OrionLib:MakeNotification({
					Name = "Stopped Strength training",
					Time = 7
				})
			end
		end    
	})

	local MainSectionTwo = MainTab:AddSection({ Name = "Auto Yen & Crystal thing" })
	MainSectionTwo:AddToggle({
		Name = "Activate Auto Yen & Crystal",
		Default = false,
		Callback = function(Value)
			if Value then
				AutoYenThread:Start()
				OrionLib:MakeNotification({
					Name = "Started AutoYen",
					Time = 7
				})
			else
				AutoYenThread:Stop()
				OrionLib:MakeNotification({
					Name = "Stopped AutoYen",
					Time = 7
				})
			end
		end    
	})

	local SettingsTab = Window:MakeTab({
		Name = "Settings",
		PremiumOnly = false
	})

	local SettingsSection = SettingsTab:AddSection({ Name = "Settings" })
	SettingsSection:AddButton({
		Name = "Destroy UI",
		Callback = function()
	        OrionLib:Destroy()
	  	end    
	})

	OrionLib:Init()
end